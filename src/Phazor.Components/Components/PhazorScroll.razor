@using Phazor.Components.Extensions
@using Phazor.Components.Models
@using Phazor.Components.Tools
@namespace Phazor.Components

<div class="@_classFactory.Value" id="@Id">
    @ChildContent
</div>

@code {

    private readonly CssClassFactory _classFactory;

    public PhazorScroll()
    {
        _classFactory = new CssClassFactory(BuildClasses);
    }

    [Parameter]
    public string? Id { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public Direction Direction { get; set; } = Direction.Horizontal;

    public override Task SetParametersAsync(ParameterView parameters)
    {
        if (parameters.TryGetUpdatedValue(nameof(Direction), Direction, out _))
            _classFactory.Invalidate();

        return base.SetParametersAsync(parameters);
    }

    private CssClassBuilder BuildClasses(CssClassBuilder builder)
    {
        return builder
            .Add("phazor-scroll")
            .AddWhen(Direction is Direction.Horizontal, "phazor-scroll-horizontal")
            .AddWhen(Direction is Direction.Vertical, "phazor-scroll-vertical");
    }

}