@namespace Phazor.Components
@using Phazor.Components.Extensions
@typeparam T

@if (_value is not null && Fragment is not null)
{
    @Fragment.Invoke(_value)
}

@code {

    private IDisposable? _disposable;

    private T? _value;

    [Parameter]
    public IObservable<T>? Value { get; set; }

    [Parameter]
    public RenderFragment<T>? Fragment { get; set; }

    protected override void OnParametersSet()
    {
        _disposable?.Dispose();

        _disposable = Value?.Subscribe(x =>
        {
            _value = x;
            StateHasChanged();
        });
    }

}